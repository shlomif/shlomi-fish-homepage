#include 'template.wml'

<p>
We already encountered some of Perl's built-in functions. Perl enables us to
define our own functions using Perl code. Whenever you use a piece of code 
more than once in a program, it is a good idea to make it into a function. 
That way, you won't have to change it in more than one place.
</p>

<p>
In Perl, every function accepts an array of arguments and returns an array of
return values. The arguments (also known as "parameters") can be found in the
<tt>@_</tt> variable. This variable is magical and need not and should not be 
declared with <tt>my</tt>. In order to return values from a function, one can
use the <tt>return</tt> keyword.
</p>

<p>
To declare a function use type <tt>sub function_name {</tt> at the beginning
and a <tt>}</tt> at the end. Everything in between, is the function body.
</p>

<p>
Here's an example, for a function that returns the maximum and the 
minimum of an array of numbers.
</p>

<quadpres_code_block>
<quadpres_include_colorized_file filename="src/functions/min_max.pl" />
</quadpres_code_block>

<p>
And here's another one for a function that calculates the hypotenuse of a
right triangle according to its other sides:
</p>

<quadpres_code_block>
<quadpres_include_colorized_file filename="src/functions/pythagoras.pl" />
</quadpres_code_block>

