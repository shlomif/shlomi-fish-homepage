#include '../template.wml'

<latemp_subject "Black Hole Solitaire Solver" />

<p>
This is a solver, written in C, to solve
<a href="http://en.wikipedia.org/wiki/Black_Hole_%28solitaire%29">the
Solitaire variant called “Black Hole”</a>. It provides a portable C library,
and a command line application that after being fed with a layout will emit 
the cards to move to the “black hole” (the foundation).
</p>

<h2 id="download">Download</h2>

<set-var ver="0.2.0" />
<set-var arc="black_hole_solver-<get-var ver />.tar.xz" />
<set-var sqlite_dump_arc="black_hole_solver.dump.xz" />
<set-var sqlite_dump_url="http://prdownload.berlios.de/fc-solve/<get-var sqlite_dump_arc />" />

<ul>

<li>
<a href="http://prdownload.berlios.de/fc-solve/<get-var arc />"><get-var arc /></a> - requires <a href="http://www.cmake.org/">CMake</a> to be built.
</li>

<li>
<a href="http://search.cpan.org/dist/Games-Solitaire-BlackHole-Solver/">The Games-Solitaire-BlackHole-Solver CPAN Distribution</a> - an older version of the
solver written as a proof-of-concept, which produces identical results, but
is much slower and consumes more memory.
</li>

<li>
<a href="<get-var sqlite_dump_url />"><get-var sqlite_dump_arc /></a> - results
from running the solver on the first 1 million PySolFC deals - inside the dump
of an <a href="http://www.sqlite.org/">SQLite</a> database. 
</li>

</ul>

<h3 id="download-solving-data">Solving Data</h3>

<p>
We’ve ran the solver on the first 1 million 
<a href="http://pysolfc.sourceforge.net/">PySolFC</a> Black Hole Solitaire
deals and one can 
<a href="http://prdownload.berlios.de/fc-solve/black_hole_solver.dump.xz"><b>download</b>
the data from that</a> as a compressed textual dump of an
<a href="http://www.sqlite.org/">SQLite database</a>.
</p>

<p>
Here’s a description of the tables of the database:
</p>

<ol>

<li>
<p>
<b>bhs_runs</b> - this table contains the results and statistics of running 
the solver on the boards. Its columns are:
</p>
<ol>
<li>
<b>idx</b> - the index of the PySolFC deal.
</li>
<li>
<b>status</b> - a character representing the verdict - ‘U’ for unsolved,
‘S’ for solved.
</li>
<li>
<b>num_checked</b> - the number of iterations that were checked (“num_times”).
If the game was unsolved, then it will be equal to num_generated (see below).
</li>
<li>
<b>num_generated</b> - the number of states generated (and not necessarily
checked). May only be different if the deal was solved.
</li>
</ol>

</li>

<li>

<p>
<b>bhs_solutions</b> - this table contains the compacted solutions for the
solved boards. Its columns are:
</p>

<ol>

<li>
<b>idx</b> - the index of the deal (that must be ‘S’ on “bhs_runs”).
</li>

<li>
<b>solution</b> - this is the compacted solution. The 0,2,4 etc. characters are
the indices of the stacks moved in the range 1-17. The 1,3,5 etc. characters are
the corresponding moved cards after calculating 
<tt>chr(1 + $suits_to_n{$s} * 13 + $ranks_to_n{$r})</tt> where the suits
are ordered <tt>H,C,D,S</tt>. It will total 51*2 characters. Here’s 
<a href="http://svn.berlios.de/svnroot/repos/fc-solve/black-hole-solitaire/trunk/black-hole-solitaire/range-solving/populate-summary-database.pl">the script
that was used to generate them from the more verbose solution files</a>.
</li>

</ol>

</li>

</ol>


<h2 id="project-links">Project Links</h2>

<ul>

<li>
<a href="http://svn.berlios.de/svnroot/repos/fc-solve/black-hole-solitaire/">Subversion
repository</a>
</li>

<li>
<a href="http://search.cpan.org/dist/Games-Solitaire-BlackHole-Solver/">search.cpan.org
Record</a>
</li>

<li>
<a href="http://cpan.uwinnipeg.ca/dist/Games-Solitaire-BlackHole-Solver">kobesearch Record</a>
</li>

<li>
<a href="http://freshmeat.net/projects/black-hole-solitaire-solver">Freshmeat.net
Record</a>
</li>

</ul>

<h2 id="similar-projects">Similar Projects</h2>

<ul>

<li>
<a href="http://fc-solve.berlios.de/">Freecell Solver</a> and
<a href="http://fc-solve.berlios.de/links.html#other_solvers">other Solitaire
solvers</a>.
</li>
</ul>

<h2 id="licence">Licence</h2>

<p>
The solver is original work and is subject to the terms of the
<a href="http://en.wikipedia.org/wiki/MIT_License">MIT/X11
licence</a>, which is a Public Domain-like open-source licence.
</p>

<h2 id="news">News</h2>

<h3 id="news_version_0_2_0">Version 0.2.0</h3>

<p>
Version 0.2.0 of Black Hole Solitaire Solver was released. The highlight of
this release is the porting of the solver from Perl to C which yields a very
dramatic gain in speed and memory consumption. As a result of this effort,
we have run the solver on the first 1 million PySolFC deals of Black
Hole Solitaire and have drawn some conclusions:
</p>

<ul>

<li>
<a href="http://tech.groups.yahoo.com/group/fc-solve-discuss/message/1068">Solving Statistics for the First 1 Million PySolFC Black Hole Solitaire Deals</a>
</li>

<li>
<a href="http://tech.groups.yahoo.com/group/fc-solve-discuss/message/1071">Follow-up with number of unsolved deals with positions span below a certain threshold</a>
</li>

</ul>

<define-tag camila_ron>
;;; Sponsored by Camila Ron
;;; Remove at 2013-10-24
<hr />
<p>
Become master of latest technology with our <a
href="http://www.testking.eu/exam/SY0-201.htm">testking SY0-201</a> online
course.  Download the <a
href="http://www.testking.eu/exam/642-813.htm">testking 642-813</a> tutorials
and <a href="http://www.testking.eu/exam/70-680.htm">testking 70-680</a> study
guide for easy learning.
</p>
</define-tag>

<camila_ron />

