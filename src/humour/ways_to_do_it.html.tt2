[%- SET title = "Ways to do it According to the Programming Languages of the World" -%]
[%- SET desc = "Ways to do it According to the Programming Languages of the World" -%]


[%- WRAPPER wrap_html -%]
[% INCLUDE "pages/t2/humour/ways_to_do_it.tt2" %]

<div class="main_text">

<ul>
<li>
<b>Perl</b> - There’s more than one way to do it.
</li>

<li>
<b>C++</b> - There are 5 ways to do it, 3 out of which are not supposed to work.
</li>

<li>
<b>Visual Basic</b> - The only way to do it is to use a third party component.
</li>

<li>
<b>ANSI C</b> - There is usually one way to do it, but there’s more than one
way to optimise it.
</li>

<li>
<b>Java</b> - There’s barely one way to do it. (But as opposed to C++ it is
guaranteed to work.)
</li>

<li>
<b>Python</b> - There’s only one way to do it. The one true way of doing it.
And then there are others.
</li>

<li>
<b>COBOL</b> - The only way to do it is to use something else.
</li>

<li>
<b>Common LISP</b> - There is an infinite series of ways to do it, increasing
in elegance, and decreasing in legibility.
</li>

<li>
<b>Scheme</b> - There are several ways to do it, but you have to chart all of
them yourself.
</li>

<li>
<b>Haskell</b> - You can think of any number of ways to do it, but only one
will have a reasonable time or space complexity.
</li>

<li>
<b>Forth</b> - There are several ways to write it, but no way to read it.
</li>

<li>
<b>HTML</b> - There are many ways to do it. Most of them should be avoided
at all costs, and the other ones should better be generated with something
else.
</li>

<li>
<b>The C Preprocessor</b> - There’s not supposed to be a way to do it.
</li>

<li>
<b>Fortran</b> - There isn’t a way to do it... oh wait! Now there is.
</li>

<li>
<b>Bash</b> - There are several ways to do it. Now one has to find a way
to decide which way to do it.
</li>

<li>
<b>C Shell</b> - The only way to do it does not work.
</li>

<li>
<b>zsh</b> - There’s at least one way to do anything.
</li>
</ul>

[% cc_by_sa_license_british( "year" => "2002", ) %]

</div>

[% END %]
