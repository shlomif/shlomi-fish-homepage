<body id="index" lang="he-IL">
<!-- kate: syntax normal; -->
<title>The Pope Died on Sunday</title>

<s id="copyright" lang="en-UK">

<title>Copyright</title>

This is a fictional story that is being written by
<a href="http://www.shlomifish.org/">Shlomi Fish</a>, and is original
artwork.

It is made available under the
<a href="http://creativecommons.org/licenses/by-sa/3.0/">Creative Commons
Attribution-Share Alike 3.0 Unported Licence (CC-by-sa)</a>
(or at your option - any later version).

See <a href="http://www.shlomifish.org/meta/copyrights/">Shlomi Fish’s
Copyright Terms Page</a> for how to comply with this licence.

</s>

<s id="chapter-monday">

<title>Part 1: Monday</title>

The pope died on Sunday.

It didn't bother Rachel Southern too much. She was half-Catholic, but if
you asked her if God indeed existed, she would say: “Even if God existed,
he would not expect us to believe in him”. And of course she didn't buy
an artificial division of him into three parts, even if she believed he
exists. And so she went on her way to work on Monday, on what seemed like
the start of a perfectly typical week in the life of a female American
bachelor in her twenties.

Rachel did not admit it a lot, but Monday was her favourite day of the
week (her most hated one was Wednesday). It was not that she didn't
like the weekend. But she loved her work enough to appreciate the beginning
of the work-week in which she worked. She also liked Monday when she
studied in college, only now she loved it more, because she preferred
working over studying.

A graphic artist such as Rachel, could not afford herself to lose a
single moment from that precious day which is known as Monday. In order
to maneuver between four different software applications (Adobe Illustrator,
Adobe Photoshop, Corel-Draw and GIMP), on what was in her own
words “that excuse for an operating system also known as Windows 98”,
required a large amount of patience and tolerance. Rachel had a severe
lack of these qualities, but she actually loved doing graphics work.
However, at her home, she had many T-shirts with that
perhaps-Penguin-perhaps-Duck, to signify her hope for better days.

Anyway, that day, Rachel was able to catch an early bus, and reached her
workplace some time before her work started, at a quarter to nine. She lay
down her backpack, and turned on the computer. She checked her E-mail, went over
her task list, set up the daily schedule, and then decided to prepare
some fruit tea to start the day on the right foot. Therefore, she walked
to the kitchen. A few of her colleagues were at the kitchen discussing
what seemed like the significant event that took place the day before.

“Well, in my opinion, Cardinal Averus has the best chances of being voted
as the new pope.” said Adam Grinsky, who was another graphic artist who
worked in the company.

“I’m not sure about it.” said Eva Hallworth, who was an accountant.
“When the late Pope was elected, most people thought his chances of
getting elected were minimal.”

Rachel went to prepare some Almond tea, and activated the electric
kettle, even though she was almost certain the water inside was warm
enough.

“Ah, Rachel, ”, Adam told her, “who do you think will be elected as
the new Pope?”

“In my opinion, the next pope is a Poisson random variable, with a
mean of 0.7, where 0 is Cardinal Averus, 1 is…”, said Rachel.

“Are you ever going to stop stressing the fact that you are a
Computer Science graduate?”, asked Adam.

“The time I will stop that is an exponential random variable with
a mean of 5 years.” Rachel told him.

“What does it mean?” asked Adam.

“It means that no matter how much time has passed, the chance I will
quit within a given time frame of a certain length always remains
constant.”

“That doesn't sound good.” said Eva.

“It doesn’t.” said Rachel, as she lifted her cup of tea. “It really
really doesn't.”

Rachel went to her computer, and started working on it. She had a
picture she had to finish in Illustrator, but at the same time also
read her E-mail.

It didn’t take too long, and Alex Rodman, a young man, who decided to
work before starting to learn in the University (“If at all” as he
said). He was one of the system administration people, and Rachel found
it convenient to delegate some tasks for him to do.

"I finished writing the script you asked me to write for you." Alex told her.

"Alex, " answered Rachel, while not lifting her eyes from the computer,
"You are incredibly sweet."

“Ah, if only my dates would say that!”

“They are eventually going to tell you that - believe me. Anyway, how long
is the script?”

“I don’t know. 100, 200 lines.”

“And how many greps, sorts, maps and joins have you used?”

“Too many, heh.”

“Well, whatever. Thanks anyway. Anyway, I hated Lisp when I studied in
college, and, in my opinion,  Perl inherited a few of its features
that I like the least.”

“Then you won’t be happy to learn that I used eval to compile some code
at run-time.”

“Oh no!” Rachel said, while putting her face in her palms, “Why did
you have to do such a thing? I think your destiny is to be a Lisp or
Scheme programmer.”

”Do you want me to write the program in a more C-like manner?”

“No, never mind. ‘If it is working - don’t touch’. I don’t know why
Larry Wall decided that in Perl, it should be possible to write code
that is similar to every other language. I personally would be happy
if it was just C with unlimited strings that can contain every character…”

“Regular expressions.” said Alex.

“Yes, arbitrary sized arrays, and all the other sane stuff.”

“I happen to think it is nifty that you can do Lambda Calculus in Perl.”

“For your information, one can also do it in C.”

“Really, how?”

“Something to do with a stack — I do not remember the exact details
because I did not focus on it too much, and it was the first thing
that I forgot after I took the course. However, one of my co-students
used it in C.”

“Really, how was his code?”

“The Lambda Calculus was beautiful.”

“And how was it as a C program?”

“Completely illegible. Eventually, I convinced him to convert it
to normal C code. Anyway, I think I should start working a little
on my work work. I will already try to digest the script you wrote,
on my own.”

“OK, farewell!” said Alex.

“Bye!” Rachel said and went back to work.

Rachel was able to finish the drawing until 11:00, and from then until
lunch, she walked around trying to receive feedback from her co-workers.
It was not easy, because each one had an opinion that something completely
different there needs to be changed. Rachel organised a mini-conference
to discuss what should be done in order to correct the drawing, and as
a result, it seemed like the lack-of-consensus only became stronger.
But then came the time for lunch.

Sometimes Rachel was sorry that she did not work as a programmer, where
the fellow programmers were happy that the code compiled and worked at all.
“Oh well,” she told herself, “even if I completely get tired of doing
graphical work, I can always find work as a programmer. At least now.”
She used to look at the job adverts in the newspaper, and most of them
were not for graphic artists.

That day, Rachel decided to go for lunch with Alex, Betty Pierce, who was
also a graphic artist, as well as Angela Cronman, who was a secretary in
the company. They decided to go to a nearby Chinese restaurant, which not
only was cheap, but also served pretty good food.

Rachel insited on eating with chopsticks, and she also noticed that Alex
used to do so as well. The two other women ate using a fork and a knife.

“I got a chance to look at your script.” Rachel told Alex as the awaited
for the arrival of the main course.

“And-?” Alex said expectedly.

“I have seen easier to understand programs in Scheme that used all the bad
things you used: eval, mappings, filters, accumulators, etc.”

“I see. Perl is not supposed to be easier to understand than Scheme.”

“That’s right. But when I write something in Perl or in a different programming
language, I try to think of the people who read it. Thus, I very rarely call
my variables ‘a’, ‘b’, ‘i’ or ‘j’, and even if they are one or two-letter
variables, I add a note that tells me what the letter signifies. I am lucky
that, in your case, I knew what the script is supposed to do, or else I
completely won’t have understood it.”

“I don’t suppose you gain such practises when you learn Computer Science in
college?” Alex told her.

“Unfortunately, the purpose of computer science education in college is
to teach you completely different things. Like how to implement a
self-balancing tree, or how to write a program that calculates a product
of two numbers in Lambda calculus, or how to write a compiler. Or a thousand
different things that in 90%of the cases you won’t have to use. And in the
remaining 10% cases, I am sure that Electrical Engineers, or Physicists or
people without any academic qualification could be equally
as successful.”

“However, not to write a program in a readable, comprehensible, extensible,
and cross-platform manner.”, said Alex.

“Yes, true. I don't know if I helped or hindered my partner for ‘Intro to
Computer Science’, which was our introductory course in Penn State. Every
idea he had on how to write a program would work, but was just unacceptable
from the point-of-view of an experienced programmer. I have no idea how
people come to college before they have got their feet wet with programming
themselves.”

“Rachel dearest, ” Betty said, “you told us enough how your brother and you
were serious hackers in your time.”

“If you call people who programmed with Basic and with 16-bit C++ — without
SQL databases, without an operating system with proper multitasking, with
no extensive knowledge of mathematics, and with array and structs as
the only data structures — “hackers”, then yes — we did it alright. And that
was still very impressive for what Bill Gates did in his youth. But in these
chaotic Linux times, the experiences of my brother and me in our youth have
been depreciated for a long time, like they say.”

</s>

</body>

