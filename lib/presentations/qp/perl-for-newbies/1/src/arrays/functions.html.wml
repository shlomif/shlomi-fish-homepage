#include 'template.wml'

<h2>push</h2>

<p>
The <code>push</code> function appends an element or an entire array to the
end of an array variable. The syntax is <code>push @array_to_append_to, @array_to_append</code> or <code>push @array, $elem1</code>. For example, the primes program from earlier could be written as:
</p>

<quadpres_code_block>
<quadpres_include_colorized_file filename="src/arrays/push.pl" />
</quadpres_code_block>

<p>
Notice that <code>push</code> is equivalent to typing
<code>@array = (@array, $extra_elem)</code>, but it is recommended
to use it, because it minimises error and it executes faster.
</p>

<h2>pop</h2>

<p>
<code>pop</code> extracts the last element from an array and returns it. Here's a
short example to demonstrate it:
</p>

<quadpres_code_block>
<quadpres_include_colorized_file filename="src/arrays/pop.pl" />
</quadpres_code_block>

<h2>shift</h2>

<p>
<code>shift</code> extracts the <b>first</b> element of an array and returns it. The
array will be changed to contain only the elements that were present there
previously, with the 1 to <code>scalar(@array)-1</code> indexes.
</p>

<p>
Here's the above example, while using <code>shift</code> instead of <code>pop</code>:
</p>

<quadpres_code_block>
<quadpres_include_colorized_file filename="src/arrays/shift.pl" />
</quadpres_code_block>

<h2>join</h2>

<p>
The syntax is <code>join($separator, @array)</code> and what it does is
concatenates the elements of <code>@array</code> while putting <code>$separator</code> in
between. Here's an example:
</p>

<quadpres_code_block>
<quadpres_include_colorized_file filename="src/arrays/join.pl" />
</quadpres_code_block>


<h2>reverse</h2>

<p>
The <code>reverse</code> function returns the array which contains the elements
of the array passed to it as argument in reverse. Here's an example:
</p>

<quadpres_code_block>
<quadpres_include_colorized_file filename="src/arrays/reverse.pl" />
</quadpres_code_block>


<p>
Note that by typing <code>scalar(reverse($scalar))</code> you get the string that
contains the characters of <code>$scalar</code> in reverse.
<code>scalar(reverse(@array))</code> concatenates the array into one string and then
reverses its characters.
</p>
