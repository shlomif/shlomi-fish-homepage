[%- SET title = "Shlomi Fish’s Art - Back to my Homepage - Inkscape Version" -%]
[%- SET desc = "A “Back to my Homepage” graphic artwork similar to the logo of “Back to the future”" -%]


[%- WRAPPER wrap_html -%]

<div class="lim_width">
<img src="../../images/bk2hp-v2.svg" alt="Back to my homepage" style="margin-bottom:1.5em; height:140px;" />

[% WRAPPER h2_section "id" => "about", "title" => "About this image", %]

<p>
This is a logo not unlike the one used for the film
<i>Back to the Future</i>
(See
<a href="https://en.wikipedia.org/wiki/Back_to_the_Future#/media/File:Back_to_the_Future.jpg">the Film’s poster</a>
for example, or <a href="http://www.google.com/search?hl=en&amp;lr=&amp;ie=UTF-8&amp;oe=UTF-8&amp;q=%22back+to+the+future%22&amp;btnG=Google+Search">search Google</a>)
- only saying “Back to my Homepage” instead.
I also decided to use the cyan-to-blue gradient, instead of the yellow-to-red
one, which is used in the original logo, because I felt it was nicer to the
eye in this context.
</p>

[%- END -%]

[% WRAPPER h2_section "id" => "why", "title" => "Why the new version?", %]

<p>
The <a href="../bk2hp/">previous version of the image</a> which had been
created in <a href="http://en.wikipedia.org/wiki/CorelDRAW">CorelDRAW</a>
version 4 worked well for a while, but later on it was reported that the
exported GIF had quite a few artefacts. I ran into problems opening the
original .CDR file in a version of CorelDRAW Essentials 1 that I got (and
was told it cannot handle .CDRs as old as CorelDRAW 4), and
could no longer open it in CorelDRAW 4, which reported a missing font.
</p>

<p>
Since this was yet another case of why
<a href="[% base_path %]philosophy/computers/open-source/not-trust-non-FOSS/">non-open-source
software cannot really be trusted and depended on</a>, I eventually decided
that it may be easier (and better in the long run) to try to redo my
efforts using open source graphics programs such as
<a href="http://en.wikipedia.org/wiki/Inkscape">Inkscape</a> (which is
a vector editor) or
<a href="http://en.wikipedia.org/wiki/GIMP">GIMP</a> (which is a raster
editor).
</p>

<p>
Eventually, most of the new logo was done using Inkscape, while using some
scripts and Inkscape extensions to facilitate and automate the job.
They can be found in a
<a href="https://github.com/shlomif/Shlomi-Fish-Back-to-my-Homepage-Logo"><b>git
repository</b></a>.
</p>

[%- END -%]

[% WRAPPER h2_section "id" => "the_process", "title" => "The Design Process", %]

<p>
The design followed that of the previous incarnation, only this time done
using Inkscape and some scripts and extensions. I would also like to describe
the false leads.
</p>

[% WRAPPER h3_section "id" => "step__wireframe", "title" => "Step 1: Creating the Wireframe Base Image", %]

<p>
Similar to the old Corel-Draw-based version, I picked up a font that looked
the most suitable, in my case the “Impact” font from
<a href="http://corefonts.sourceforge.net/">the Microsoft corefonts</a>,
converted the “K” letter to curves and created the arrow based on the “K”.
(See <a href="https://github.com/shlomif/Shlomi-Fish-Back-to-my-Homepage-Logo/blob/master/back-to-my-homepage-logo/back-to-my-homepage.svg"><code>back-to-my-homepage.svg</code></a>).
</p>

<p>
It looks something like that:
</p>

<img src="inkscape-bk2hp-v2-new-image-cropped.png" alt="Base wireframe image in Inkscape" />

[%- END -%]

[% WRAPPER h3_section "id" => "step__bezier_envelope", "title" => "Step 2: Bézier Envelope", %]

<p>
Shortly after that I needed to apply a Bézier envelope. I found out that
the built-in Inkscape envelope effect yielded a deformed effect:
</p>

<img src="inkscape-bk2hp-v2--envelope-effect--deformed--2.png"
     alt="Deformed Inkscape Envelope Effect" />

<p>
So I sought a different approach. I considered my own ad-hoc effect by doing
mathematical calculations using a curve and a deformation, but then was
referred to the
<a href="https://github.com/shlomif/Bezier-Envelope-for-Inkscape">Bézier
Envelope extension for Inkscape</a> which I was given by E-mail and placed
on my GitHub account. This worked nicely and yielded a usable effect.
</p>

[%- END -%]

[% WRAPPER h3_section "id" => "step__perspective", "title" => "Step 3: Perspective", %]

<p>
After the envelope was done, I wanted to apply a perspective effect. It
turned out Inkscape already had an effect for doing that in the core
distribution. One thing I discovered was that the points
for the envelope had to be specified done in a particular order. Furthermore,
this order is incompatible with the default order of the points in a standard
drawn rectangle in Inkscape. So the lines of the perspective had to be
drawn using the segmented-straight-lines tool with the help of the grid.
</p>

[%- END -%]

[% WRAPPER h3_section "id" => "step__automating_using_a_script", "title" => "Step 4: Automating Using a Script", %]

<p>
I decided that I wanted to keep as much of the process as automated as
possible, so I can later reproduce the results, or tweak them gradually
without the need to run several error-prone commands each time.
As a result, I wrapped everything in
<a href="https://github.com/shlomif/Shlomi-Fish-Back-to-my-Homepage-Logo/blob/master/back-to-my-homepage-logo/scripts/shlomif_back_to_homepage_distort.py">an
Inkscape script</a> written in Python, which produced several intermediate
SVG files, while running subsequent scripts on them to produce other files
(and doing some other SVG manipulation).
</p>

[%- END -%]

[%- END -%]

</div>

[% END %]
