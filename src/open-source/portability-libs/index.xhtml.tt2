[%- SET title = "Cross-Platform Abstraction Libraries for Portable Development" -%]
[%- SET desc = "Cross-Platform libraries for abstracting system services and for portability." -%]
[%- SET more_keywords = "portability,libraries,portable,cross,platform,abstraction,library,qt,wx,gtk,glib,c,c++,stl,porting,unix,windows,linux,apple,mac os" -%]


[%- WRAPPER wrap_html -%]

<p>
Programming an application that can run both on <a href="https://en.wikipedia.org/wiki/Unix-like">Unix-like</a>
systems and on <a href="https://en.wikipedia.org/wiki/Microsoft_Windows">Microsoft Windows</a>
(and optionally other platforms) can be very hard because of the fact that
the APIs of those platforms are substantially different. Luckily,
there are abstraction libraries with which a programmer can maintain a
very similar code, while focusing on writing the application itself.
</p>

<p>
I will focus here on such libraries for <a href="https://en.wikipedia.org/wiki/C_%28programming_language%29">C</a> and
<a href="https://en.wikipedia.org/wiki/C%2B%2B">C++</a>. Higher level languages
such as <a href="http://www.perl.org/">Perl</a>,
<a href="http://www.python.org/">Python</a> or
<a href="http://www.ruby-lang.org/en/">Ruby</a> usually provide abstractions
for such things within the language or bindings to libraries in lower-level
languages.
</p>

[% BLOCK licence_qt %]
LGPLed starting from version 4.5. Previously licensed under either the GPL
or a commercial licence.
[% END %]

[% BLOCK qt_logo %]
<img src="Qt_logo_2015.svg" alt="Qt’s Logo" title="Qt’s logo from the English Wikipedia" style="height:80px; float:right;" />
[% END %]

[% BLOCK lib_qt_core %]
<li>
<p>
<a href="https://doc.qt.io/qt-5/qtcore-index.html">QtCore</a> -
part of <a href="#lib_qt">Qt</a> that provides data structures and system
services (and not GUI). [% INCLUDE licence_qt %]
[% IF with_logo %][% INCLUDE qt_logo %][% END %]
</p>
</li>

[% END %]

[% default_toc %]

[% WRAPPER h2_section id="data_structures" title="Data Structures"%]

<ul>
<li>
<p>
<a href="http://www.gtk.org/">GLib</a> - a C library that provides
many useful classes. It is complete, but sometimes common useful programming
practices (such as supplying a callback context argument) are ignored. It
also tends to have non-optimised code. LGPLed.
</p>
</li>

<li>
<p>
<a href="http://www.kylheku.com/~kaz/kazlib.html">Kazlib</a> - Provides
a Red-Black tree, a hash table and a linked list manager. An Open-Source
License.
</p>
</li>

<li>
<p>
<a href="https://en.wikipedia.org/wiki/Standard_Template_Library">The C++ Standard Template
Library (STL)</a> - Provides abstractions for many common data structures.
</p>
</li>

<li>
<p>
<a href="http://adtinfo.org/">The libavl Homepage</a> -
Contains links to many implementations of balanced binary trees.
</p>
</li>

<li>
<p>
<a href="https://github.com/fjtapia/countertree_2.0">countertree</a> - a balanced
binary tree that also provides array/vector-like functionality. (C++ / open source:
Boost Software License.)
</p>
</li>

<li>
<p>
<a href="https://github.com/danlm/c2lib">C2Lib</a> -
Library of Basics for C that contains a pool allocator,
a Perl-like vector, hashes, Perl-like strings, and matrix and vector
functions. LGPLed.
</p>
</li>

[% INCLUDE lib_qt_core with_logo="1" %]

</ul>

[% END %]

[% WRAPPER h2_section id="system_services" title="System-Services Abstractions"%]

<ul>
<li>
<p>
<a href="http://www.gtk.org/">GLib</a>
</p>
</li>

<li>
<p>
<a href="http://apr.apache.org/">The Apache Portable Run-Time (APR)</a> -
contains portable abstractions for many things, from memory allocation to
threads. Open-source, Apache Group License.
</p>
</li>

<li>
<p>
<a href="http://www.dre.vanderbilt.edu/~schmidt/ACE.html">ACE - The Adaptive
Communication Environment</a> - a comprehensive C++ library that provides
portable abstractions for almost anything a system gives you except GUI.
Runs on UNIX, Win32 and many embedded operating-systems.
</p>
</li>

<li>
<p>
<a href="http://zthread.sourceforge.net/">ZThreads</a> - a C++ library that
abstracts UNIX and Win32 threads. LGPL.
</p>
</li>

<li>
<p>
<a href="http://sources.redhat.com/pthreads-win32/">POSIX Threads for
Win32</a> - an implementation of the POSIX threads (pthreads) API for Win32.
LGPL.
</p>
</li>

<li>
<p>
<a href="https://www.roguewave.com/products-services/sourcepro">RogueWave’s
SourcePro Core</a> - a commercial library that supplies C++ abstractions
for many system services.
</p>
</li>

<li>
<p>
<a href="http://www.wxWidgets.org/">wxBase</a> - a subset of the
<a href="#lib_wx">wxWidgets</a>
library that can be used for multi-threading and the such. C++ and LGPLed.
</p>
</li>

<li>
<p>
<a href="http://www.mozilla.org/projects/nspr/">The Netscape Portable
Runtime (NSPR)</a> - a C library that abstracts Threads, sockets,
files, data structures and many other goodies. Open source under the
MPL licence.
</p>
</li>

<li>
<p>
<a href="http://www.boost.org/">Boost</a> - a free portable collection of
C++ libraries that work well with the C++ Standard Library. Contains
abstractions for data-structures and algorithms, parsing and I/O
and sockets.
</p>
</li>

<li>
<p>
<a href="https://github.com/saprykin/plibsys">plibsys</a> - an open source
(LGPLed) and cross-platform C library for encapsulating system services such
as threads and some data structures.
</p>
</li>

<li>
<p>
<a href="http://dlib.net/">Dlib</a> - a C++ library that provides many APIs,
including threading, networking, GUIs, numerical algorithms, machine
learning algorithms, image processing, and more. (Open source under the Boost
licence.)
</p>
</li>

<li>
<p>
<a href="https://pocoproject.org/">C++ Portable Components</a> -
cover functionality like threads, thread synchronisation, filesystem access,
streams, shared libraries and class loading, sockets and network protocols
(HTTP, FTP, SMTP, etc.), including an HTTP server, as well as an XML parser
with SAX2 and DOM interfaces.
</p>
</li>

<li>
<p>
<a href="http://threadingbuildingblocks.org/">Intel Threading Building Blocks</a> -
a library for threading abstractions (open source).
</p>
</li>

[% INCLUDE lib_qt_core with_logo="" %]

</ul>

[% END %]

[% WRAPPER h2_section id="gui" title="Graphical User-Interface (GUI)"%]

<ul>

<li id="lib_wx">
<p>
<a href="http://www.wxwidgets.org/">wxWidgets</a> (formerly wxWindows) -
a C++ cross-platform GUI library with Win32 , X-Windows and Mac OS X
back-ends. Native look-and-feel. LGPLed.
</p>
</li>

<li id="lib_qt">
<p>
<a href="http://www.trolltech.com/">Qt</a> -  a C++ cross-platform GUI
library with Win32, X-Windows and Mac OS X backends. A very encompassing API.
[% INCLUDE licence_qt %]
[% INCLUDE qt_logo %]
</p>
</li>

<li id="lib_gtk">
<p>
<a href="http://www.gtk.org/">GTK+</a> - a multi-platform GUI toolkit
for C, with bindings to many other languages. LGPLed. May look ugly with the
default theme, but other themes are available.
</p>
</li>

<li>
<p>
<a href="https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL">Mozilla’s XUL</a> - a C++ cross-platform
GUI library for X-Windows, Win32 and Mac OS based on XML. (Open source, MPL.)
</p>
</li>

<li id="lib_fltk">
<p>
<a href="http://www.fltk.org/">FLTK</a> - short for “Fast Light Toolkit”,
FLTK is a lightweight cross-platform GUI toolkit. LGPLed.
</p>
</li>

<li>
<p>
<a href="https://savannah.nongnu.org/projects/paragui/">ParaGUI</a> - a
GUI library based on the <a href="http://www.libsdl.org/">SDL</a> framework.
LGPLed.
</p>
</li>

<li>
<p>
<a href="https://en.wikipedia.org/wiki/Visual_Component_Library">Borland’s VCL</a> - The GUI library behind
Delphi and C++ Builder. Proprietary License, which is free for use for
developing Open-Source Programs. <b>Note:</b> the Linux version is no longer
up-to-date or supported.
</p>
</li>

<li>
<p>
<a href="http://www.fox-toolkit.org/">The FOX Toolkit</a> - a C++ toolkit
that runs on UNIX, Windows and Mac OS X. Renders its own controls, so does
not have the system-wide native look and feel, but, on the other
hand, has a consistent one across all platforms.
</p>
</li>

<li>
<p>
<a href="https://wiki.winehq.org/Winelib">Winelib</a> - an open source
(LGPLed) compatibility layer of the <a href="https://en.wikipedia.org/wiki/Windows_API">Windows API</a>
for UNIX-like and other systems.
</p>
</li>

<li>
<p>
<a href="http://www.sandroid.org/TurboC/">The “TurboC” Library</a> - an
open source (LGPLed) library for providing the functionality of some
of the headers of
Borland <a href="https://en.wikipedia.org/wiki/Borland_Turbo_C">Turbo C</a>
for DOS, on Unix-like systems such as Linux.
</p>
</li>

<li>
<p>
<a href="http://www.free-soft.org/guitool/">A
comprehensive list of GUI libraries for X-Windows (and perhaps
other systems)</a>
</p>
</li>

</ul>

[% END %]

[% WRAPPER h2_section id="multimedia" title="Multimedia"%]

<ul>
<li>
<p>
<a href="http://www.libsdl.org/">SDL - The Simple DirectMedia Layer</a> -
a comprehensive library that runs on Win32, BeOS and Mac OS and several
flavours of UNIX. Has bindings to many other languages
</p>
</li>

<li>
<p>
<a href="http://www.opengl.org/">OpenGL</a> - a portable library for
3-D and 2-D graphics, that provides many graphics primitives. Has an
open-source LGPLed implementation titled
<a href="http://www.mesa3d.org/">Mesa</a>.
</p>
</li>

<li>
<p>
<a href="http://www.sfml-dev.org/">SFML -
“Simple and Fast Multimedia Library”</a> - an open source (zlib licence)
library for multimedia and games. C++ with C bindings.
</p>
</li>

<li>
<p>
<a href="http://crystal.sourceforge.net/">Crystal Space</a> - a portable
library for managing a large number of objects in a three-dimensional world.
</p>
</li>

<li>
<p>
<a href="https://en.wikipedia.org/wiki/Open_Inventor">Open Inventor</a> - A
library for managing objects and manipulators in 3-D Space. LGPL. Runs on
Windows, Linux and IRIX.
</p>
</li>

<li>
<p>
<a href="https://en.wikipedia.org/wiki/OpenAL">OpenAL</a> - a library for generating
three-dimensional sound. LGPLed.
</p>
</li>

<li>
<p>
<a href="http://plib.sourceforge.net/">PLib</a> - a suite of portable
game libraries. LGPLed.
</p>
</li>

<li>
<p>
<a href="https://github.com/sphair/ClanLib">ClanLib</a> - a portable C++ game
SDK. LGPLed.
</p>
</li>

<li>
<p>
<a href="https://godotengine.org/">Godot Engine</a> - an open source game
engine.
</p>
</li>

<li>
<p>
<a href="http://en.wikipedia.org/wiki/Unreal_Engine">Unreal Engine</a> - a
proprietary 3-D engine for games.
</p>
</li>

</ul>

[% END %]

[% WRAPPER h2_section id="database" title="Database Access"%]

<ul>
<li>
<p>
<a href="https://en.wikipedia.org/wiki/Open_Database_Connectivity">ODBC</a>,
and <a href="http://www.unixodbc.org/">unixODBC</a> - a portable, but
rather heavyweight database abstraction layer for C.
</p>
</li>

<li>
<p>
<a href="http://www.linuxnetworks.de/doc/index.php/OpenDBX">OpenDBX</a> -
a lightweight, cross-platform, database compatibility layer for C and
C++.
</p>
</li>

<li>
<p>
<a href="http://www.yolinux.com/TUTORIALS/LinuxDatabases.html">Other Databases for Linux resources</a>
</p>
</li>

<li>
<p>
<a href="http://www.gnome-db.org/">libgda</a> - a database abstraction
library from the GNOME people.
</p>
</li>
</ul>

[% END %]

[% WRAPPER h2_section id="consoles" title="Consoles / Terminals"%]

<ul>

<li>
<p>
<a href="https://pdcurses.org/">PDCurses</a> - <q>a public domain curses library for DOS, OS/2, Windows console, X11 and SDL, implementing most of the functions available in X/Open and System V R4 curses.</q>
</p>
</li>

<li>
<p>
<a href="https://en.wikipedia.org/wiki/Ncurses">ncurses</a>
</p>
</li>

<li>
<p>
<a href="http://www.leonerd.org.uk/code/libtickit/">libtickit</a> - <q>This library provides an abstracted mechanism for building interactive full-screen terminal programs. It provides a full set of output drawing functions, and handles keyboard and mouse input events.</q>
</p>
</li>

<li>
<p>
<a href="https://github.com/nowres/conio-for-linux">conio for Linux</a> - GPL.
</p>
</li>

<li>
<p>
<a href="http://www.catb.org/~esr/terminfo/">Master database of terminal descriptions</a> - on Eric Raymond's site.
</p>
</li>

</ul>

[% END %]

[% WRAPPER links_sect  %]

<ul>

<li>
<p>
<a href="http://en.wikipedia.org/wiki/Cross-platform">The English
Wikipedia’s “Cross-platform” article</a> - contains a list of libraries,
platforms and languages.
</p>
</li>

<li>
<p>
The book
<a href="[% base_path %]philosophy/books-recommends/#porting_unix_software">“Porting
UNIX Software” by Greg Lehey</a> - outdated, but still can provide many
insights.
</p>
</li>

<li>
<p>
<a href="http://github.com/aleksandar-todorovic/awesome-c">The “awesome-c” List
on GitHub</a> - useful resources for C development - often cross-platform.
</p>
</li>

<li>
<p>
<a href="http://github.com/fffaraz/awesome-cpp">“awesome-cpp” on GitHub</a> -
“a curated list of awesome C/C++ frameworks, libraries, resources and
shiny things”.
</p>
</li>

</ul>

[% END %]

[% WRAPPER credits_sect %]

<ul>

<li>
<p>
<a href="http://en.wikipedia.org/wiki/File:Qt_logo_2015.svg">Qt’s logo</a>
taken from the English Wikipedia under the public domain.
</p>
</li>

</ul>

[% END %]

<h2 id="licence">Licence</h2>

[% license_obj.by_british_blurb( "year" => "2011", ) %]

<!--
Databases:
==========
* libdbi - DBI for C - http://libdbi.sourceforge.net/
** Not native Win32 for the time being
-->

[% END %]
