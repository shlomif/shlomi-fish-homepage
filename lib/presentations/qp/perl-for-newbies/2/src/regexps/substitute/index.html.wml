#include 'template.wml'



<p>
One can use regular expression to substitute an occurrence
of a regular expression found inside a string to something else. The operator
used for this is <code>s/$exp_to_search/$exp_to_subs_for/</code>. The following
simple program replaces a number with the string "Some Number":
</p>

<quadpres_code_block>
<quadpres_include_colorized_file filename="src/regexps/substitute/number.pl" />
</quadpres_code_block>

<p>
Notice that in this case, only the first occurrence of the string will be
substituted. The <code>g</code> switch which will be covered soon, enables us to
substitute <b>all</b> of the occurrences.
</p>

<p>
One can include the captures that are matched in the expression as part of
the substitution string. The first capture is <code>$1</code>, the
second <code>$2</code> etc.
</p>

<p>
Here's an example which reverses the order of two words at the beginning of a
sentence:
</p>


<quadpres_code_block>
<quadpres_include_colorized_file filename="src/regexps/substitute/reverse_words.pl" />
</quadpres_code_block>


<table class="note">
<tr class="note">
<td class="note">

<h3 class="note">Note</h3>

<p>
The <code>$1</code>, <code>$2</code> variables are also available after the regular
expression match or substitution is performed, and can be used inside
your perl code.
</p>

</td>
</tr>
</table>

