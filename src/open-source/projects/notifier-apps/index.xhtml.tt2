[%- SET title = "Notifier-Apps: Client/Server HTTP-based desktop notifications" -%]
[%- SET desc = "Notifier-Apps: Client/Server HTTP-based desktop notifications for knowing when a program finished running, or an event occurred." -%]

[%- WRAPPER wrap_html -%]

<p>
There are the following components:
</p>

[% WRAPPER h2_section id="client" title="The client" %]

[% WRAPPER github_cpan_dist_links     dist = "App-Notifier-Client"
    github_url = "https://github.com/shlomif/app-notifier"
     %]

[%- END -%]

<p>
A command line client written in Perl 5 that sends a message using HTTP
and JSON to a URL hosting the server. E.g:
</p>

<pre>
notifier notify --msg "Finished building the software project"
</pre>

<p>
This can be used in shells using an idiom like:
</p>

<pre>
make ; notifier notify --msg "Finished building the software project"
</pre>

[%- END -%]

[% WRAPPER h2_section id="server" title="The server" %]

[% WRAPPER github_cpan_dist_links     dist = "App-Notifier-Service"
    github_url = "https://github.com/shlomif/app-notifier"
     %]

[%- END -%]

<p>
An HTTP service, implemented using <a href="https://metacpan.org/pod/Dancer2">Dancer2</a>
that listens for notifier events and invokes an event hook (such as a program
displaying a video along with the notified message).
</p>

<p>
One should run it on the local desktop where one wishes to be notified of the events.
</p>

[%- END -%]

[% WRAPPER h2_section id="event_handler" title="The event handler" %]

<p>
The server can be configured to invoke any arbitrary command as an event
handler for when a notification arrives. Previously I used to invoke
<a href="https://techbase.kde.org/Development/Tutorials/Shell_Scripting_with_KDE_Dialogs">kdialog</a>
or <a href="https://linux.die.net/man/1/xmessage">xmessage</a>
along with <a href="https://en.wikipedia.org/wiki/Mpv_(media_player)">mpv</a>
but it was less than ideal.
</p>

<p>
As a result, I wrote a <a href="https://github.com/shlomif/shlomif-computer-settings/blob/master/shlomif-settings/home-bin-executables/bin/notifier-event-show-hook--pyqt5.py">custom event handler</a>
using python-vlc and PySide2 / PyQt5 (largely derived from an example in the python-vlc
repository) that can be invoked by the server. (I guess it is the <a href="https://en.wikipedia.org/wiki/Ship_of_Theseus">ship
of Theseus</a> all over again.)
</p>

[%- END -%]

[% WRAPPER h2_section id="protocol_spec" title="Protocol Spec" %]

<p>
The client should make a GET request to the <code>/notify</code> endpoint of the
service with the following query parameters:
</p>

<ol>

<li>
<p>
<code>cmd_id</code> - an optional key whose value is a UTF-8 string.
</p>
</li>

<li>
<p>
<code>text_params</code> - A JSON key/value object encoded as UTF-8 and then
GET encoding. Recognized keys are <code>msg</code> whose value is a text
to display (instead of the default one).
</p>
</li>
</ol>

<p>
Example using curl:
</p>

<pre>
curl 'http://localhost:6300/notify?text_params=\{"msg":"Replacement%20Message"\}'
</pre>

<p>
This assumes the service is at http://localhost:6300/ .
</p>

[%- END -%]

[%- END -%]
